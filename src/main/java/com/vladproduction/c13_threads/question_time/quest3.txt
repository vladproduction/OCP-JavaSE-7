You’ve written an application for processing tasks. In this application, you’ve separated the critical or urgent
tasks from the ones that are not critical or urgent. You’ve assigned high priority to critical or urgent tasks.
In this application, you find that the tasks that are not critical or urgent are the ones that keep waiting for an
unusually long time. Since critical or urgent tasks are high priority, they run most of the time. Which one of
the following multi-threading problems correctly describes this situation?
A. Deadlock
B. Starvation
C. Livelock
D. Race condition
Answer: B. Starvation
(The situation in which low-priority threads keep waiting for a long time to acquire the lock and execute the
code in critical sections is known as starvation.)
